{"ast":null,"code":"var _jsxFileName = \"/Users/anshikarakheja/clg_try _music/src/pages/HomePage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport MoodSelector from \"../components/MoodSelector\";\nimport ThemeSelector from \"../components/ThemeSelector\";\nimport MusicRecommendations from \"../components/MusicRecommendations\";\nimport { getMoodRecommendations } from \"../data/musicDatabase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = ({\n  selectedMood,\n  onMoodSelect,\n  currentTheme,\n  onThemeChange,\n  currentSong,\n  isPlaying,\n  onPlaySong,\n  onFullScreenOpen,\n  likedSongs,\n  onLikeSong\n}) => {\n  _s();\n  const [recommendations, setRecommendations] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  React.useEffect(() => {\n    if (selectedMood) {\n      setLoading(true);\n      setTimeout(() => {\n        const moodRecommendations = getMoodRecommendations(selectedMood);\n        setRecommendations(moodRecommendations);\n        setLoading(false);\n      }, 1000);\n    }\n  }, [selectedMood]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theme-section\",\n      children: /*#__PURE__*/_jsxDEV(ThemeSelector, {\n        currentTheme: currentTheme,\n        onThemeChange: onThemeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(MoodSelector, {\n        onMoodSelect: onMoodSelect,\n        selectedMood: selectedMood\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), !loading && selectedMood && recommendations.length > 0 && /*#__PURE__*/_jsxDEV(MusicRecommendations, {\n        mood: selectedMood,\n        recommendations: recommendations,\n        onPlaySong: onPlaySong,\n        currentSong: currentSong,\n        isPlaying: isPlaying,\n        onFullScreenOpen: onFullScreenOpen,\n        likedSongs: likedSongs,\n        onLikeSong: onLikeSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"FwMAmC0PoSUVQMjBfpf22bYREO0=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","MoodSelector","ThemeSelector","MusicRecommendations","getMoodRecommendations","jsxDEV","_jsxDEV","HomePage","selectedMood","onMoodSelect","currentTheme","onThemeChange","currentSong","isPlaying","onPlaySong","onFullScreenOpen","likedSongs","onLikeSong","_s","recommendations","setRecommendations","useState","loading","setLoading","useEffect","setTimeout","moodRecommendations","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","mood","_c","$RefreshReg$"],"sources":["/Users/anshikarakheja/clg_try _music/src/pages/HomePage.js"],"sourcesContent":["import React from \"react\";\nimport MoodSelector from \"../components/MoodSelector\";\nimport ThemeSelector from \"../components/ThemeSelector\";\nimport MusicRecommendations from \"../components/MusicRecommendations\";\nimport { getMoodRecommendations } from \"../data/musicDatabase\";\n\nconst HomePage = ({\n  selectedMood,\n  onMoodSelect,\n  currentTheme,\n  onThemeChange,\n  currentSong,\n  isPlaying,\n  onPlaySong,\n  onFullScreenOpen,\n  likedSongs,\n  onLikeSong,\n}) => {\n  const [recommendations, setRecommendations] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n\n  React.useEffect(() => {\n    if (selectedMood) {\n      setLoading(true);\n      setTimeout(() => {\n        const moodRecommendations = getMoodRecommendations(selectedMood);\n        setRecommendations(moodRecommendations);\n        setLoading(false);\n      }, 1000);\n    }\n  }, [selectedMood]);\n\n  return (\n    <div className=\"home-page\">\n      {/* Theme Selector at Top */}\n      <div className=\"theme-section\">\n        <ThemeSelector\n          currentTheme={currentTheme}\n          onThemeChange={onThemeChange}\n        />\n      </div>\n\n      {/* Main Content */}\n      <div className=\"main-content\">\n        <MoodSelector onMoodSelect={onMoodSelect} selectedMood={selectedMood} />\n\n        {loading && (\n          <div className=\"loading\">\n            <div className=\"spinner\"></div>\n          </div>\n        )}\n\n        {!loading && selectedMood && recommendations.length > 0 && (\n          <MusicRecommendations\n            mood={selectedMood}\n            recommendations={recommendations}\n            onPlaySong={onPlaySong}\n            currentSong={currentSong}\n            isPlaying={isPlaying}\n            onFullScreenOpen={onFullScreenOpen}\n            likedSongs={likedSongs}\n            onLikeSong={onLikeSong}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}